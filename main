#include <iostream>
#include <vector>
#include <string>
#include <cmath>
#include "model.h"

using namespace std;

// Проверка ввода
bool check1(string n) {
    int flag = 0;
    for (char s : n) {
        if (isdigit(s)) {
            flag++;
        }
    }
    if (n.length() == flag) return true;
    else return false;
}


// Проверка ввода
int check(const string& prompt) {
    int val; string val1;
    cout << prompt;
    cin >> val1;
    while ( !(check1(val1) )) {
        cin.clear();
        cout << "Ошибка ввода! Повторите пожалуйста: ";
        cin >> val1;
    }
    val = stoi(val1);
    return val;
}



int main() {
    setlocale(LC_ALL, "rus");
    cout << "1 задание: Создаём три точки с разными координатами:\n";
    cout << "Введите координаты A:\n";
    int xA = check("  X: ");
    int yA = check("  Y: ");
    Point A(xA, yA);

    cout << "Введите координаты B:\n";
    int xB = check("  X: ");
    int yB = check("  Y: ");
    Point B(xB, yB);

    cout << "Введите координаты C:\n";
    int xC = check("  X: ");
    int yC = check("  Y: ");
    Point C(xC, yC);

    A.print();
    B.print();
    C.print();

    cout << "\n2 задание: Создаём линии из точек A, B, C:\n";
    Line L1(A, B);
    Line L2(B, C);
    Line L3(A, C);

    cout << "\nЛинии:\n";
    L1.print();
    L2.print();
    L3.print();

    cout << "\nИзменим координаты Линии 1 (A и B):\n";
    A = Point(check("  Новый X A: "), check("  Новый Y A: "));
    B = Point(check("  Новый X B: "), check("  Новый Y B: "));

    cout << "\nИзменим координаты Линии 2 (B и C):\n";
    B = Point(check("  Новый X B: "), check("  Новый Y B: "));
    C = Point(check("  Новый X C: "), check("  Новый Y C: "));

    L1 = Line(A, B);
    L2 = Line(B, C);
    L3 = Line(A, C);

    cout << "\nЛинии после изменения:\n";
    L1.print();
    L2.print();
    L3.print();

    A = Point(check("\nИзменим снова A - новый X: "), check("  \nНовый Y: "));
    B = Point(check("  \nНовый X B: "), check("  \nНовый Y: "));
    L1 = Line(A, B);

    cout << "\nРезультат:\n";
    L1.print();
    L3.print(); 

    cout << "\n3 задание: Создайте сущность Студент:\n";
    Student vasya("Вася", { 3, 4, 5 });
    Student petya("Петя", vasya.marks);
    petya.marks[0] = 5;

    vasya.print();
    petya.print();
    cout << "=> Изменение повлияло на обе записи\n";

    Student andrey("Андрей", vector<int>(vasya.marks));
    vasya.marks[1] = 2;

    cout << "\nПосле изменения оценки Васи:\n";
    vasya.print();
    andrey.print();
    cout << "=> Оценки Андрея не изменились\n";

    cout << "\n4 задание: Повторно используем точки A, B, C:\n";
    A.print();
    B.print();
    C.print();

    Line line1(A, B);
    Line line2(B, C);
    Line line3(A, C);

    line1.print();
    line2.print();
    line3.print();

    cout << "\n5 задание: Длина линии из A в C:\n";
    Line lineD(A, C);
    lineD.print();
    cout << "Длина линии: " << lineD.length() << endl;
}

//Точка координат.Создайте сущность Точка, расположенную на двумерной
//плоскости, которая описывается :
//• Координата Х : число
//• Координата Y : число
//• Может возвращать текстовое представление вида “{ X;Y }”
//Необходимо создать три точки с разными координатами и вывести на экран их
//текстовое представление.

//Прямая.Создайте сущность Линия, расположенную на двумерной плоскости,
//которая описывается :
//• Координата начала : Точка
//• Координата конца : Точка
//• Может возвращать текстовое представление вида “Линия от{ X1;Y1 } до
//{ X2;Y2 }”
//Для указания координат нужно использовать сущность Точка, разработанную в
//задании 1.1.Создайте линии со следующими характеристиками :
//1. Линия 1 с началом в т. {1;3} и концом в т.{23;8}.
//2. Линия 2, горизонтальная, на высоте 10, от точки 5 до точки 25.
//3. Линия 3, которая начинается всегда там же, где начинается линия 1, и
//заканчивается всегда там же, где заканчивается линия 2. Таким образом,
//если положение первой или второй линии меняется, то меняется и третья
//линия.
//4. После создания всех трех объектов измените координаты первой и второй
//линий, причем сделайте это таким образом, чтобы положение третьей
//линии соответствовало требованиям пункта 3.
//5. Измените координаты первой линии так, чтобы при этом не изменились,
//координаты третьей линии.

//Студент.Создайте сущность Студент, которая описывается :
//• Имя : строка
//• Оценки : массив целых чисел.
//• Может возвращать текстовое представление вида “Имя : [оценка1,
//оценка2, …, оценкаN] ”
//Необходимо выполнить следующие задачи :
//1. Создать студента Васю с оценками : 3, 4, 5.
//2. Создать студента Петю и скопировать оценки Васи, присвоив содержимое
//поля с оценками Васи полю с оценками Пети.
//3. Заменить первую оценку Пети на число 5. Вывести на экран строковое
//представление Васи и Пети.Объяснить результат
//4. Создать студента Андрея и скопировать ему оценки Васи так, чтобы
//изменение оценок Васи не влияло на Андрея.

/*Создаем Точку.Измените сущность Точка из задачи 1.1.В соответствии с
новыми требованиями создать объект Точки можно только путем указания обеих
координат : X и Y.
Необходимо выполнить следующие задачи :
• Создайте и выведите на экран точку с координатами 3;5
• Создайте и выведите на экран точку с координатами 25;6
• Создайте и выведите на экран точку с координатами 7;8
2 Создаем Линию.Измените сущность Линия из задачи 2.1.Новые требования
включают :
• Создание Линии возможно с указанием Точки начала и Точки конца(Точки
    из задачи 4.1)
    • Создание Линии возможно с указанием координат начала и конца как
    четырех чисел(x1, y1, x2, y2)
    Создайте линии со следующими характеристиками :
1. Линия 1 с началом в т. {1;3} и концом в{ 23;8 }.
2. Линия 2, горизонтальная, на высоте 10, от точки 5 до точки 25.
3. Линия 3 которая начинается всегда там же где начинается линия 1, и
заканчивается всегда там же, где заканчивается линия 2.

Длина Линии. Измените сущность Линия из задачи 4.2. Добавьте ей
возможность возвращать по запросу пользователя расстояние между точками
начала и конца (в виде целого числа). Создайте линию из точки {1;1} в точку
{10;15} и выведите на экран её длину.
